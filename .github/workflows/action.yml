name: build and push into dockerhub
on: 
  push:
    branches: [main]
jobs:
  gen-matrix:
    name: generate-matrix
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate testing matrix
        uses: actions/github-script@v4.1
        id: generator
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const script = require(`${process.env.GITHUB_WORKSPACE}/genMatrix.js`)
            return script();
      - name: debug
        run: echo ${{ steps.generator.outputs.result }}
    outputs:
      matrix: ${{ steps.generator.outputs.result }}

  test:
    # if: ${{ fromJson(needs.gen-matrix.outputs.matrix) }}
    needs: gen-matrix
    name: teeeeeeeeeeeeeeeeeeest
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      # fail-fast: false
      matrix: ${{ fromJson(needs.gen-matrix.outputs.matrix) }}
    steps:
      -
        name: echo
        run: echo ${{ matrix.OPENJDK_TAG }}, ${{ matrix.SBT_VERSION }}

#  build:
#    runs-on: ubuntu-latest
#    steps:
#      -
#        name: checkout
#        uses: actions/checkout@v2
#      -
#        name: Login to Dockerhub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      -
#        name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#      -
#        name: build and push
#        id: docker_build
#        uses: docker/build-push-action@v2
#        with:
#          context: ./
#          file: ./Dockerfile
#          push: true
#          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/sbt:${OPENJDK_TAG}_${SBT_VERSION}
#      - 
#          name: image digest
#          run: echo ${{ steps.docker_build.outputs.digest }}
